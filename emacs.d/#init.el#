(require 'package)
(add-to-list 'package-archives '("melpa" . "https://melpa.org/packages/"))

(pdf-tools-install)
;;set backup directory
(setq backup-directory-alist '(("." . "~/.emacs_saves")))

;;remove useless keybindings
(global-unset-key (kbd "C-x t o"));;tab-next
(global-unset-key (kbd "C-x <right>"));;next-buffer
(global-unset-key (kbd "C-x <left>"));;previous-buffer
(global-unset-key (kbd "C-x o"));;other-window
(global-unset-key (kbd "C-x C-b"));;list-buffers
;;set useful keys
(global-set-key (kbd "C-x C-a") 'all)
;;(global-linum-mode t)

;;;programming settings
(require 'company)
(global-set-key (kbd "M-/") 'company-complete)

;;set gnu style indenting for c
(setq c-default-style "linux"
      c-basic-offset 4)
;;formatting buffer
(global-set-key (kbd "C-x M-f") 'format-all-buffer)

(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(add-to-list 'load-file t)
 '(custom-enabled-themes '(tango-dark))
 '(custom-safe-themes t)
 '(font-lock-global-modes '(not speedbar-mode))
 '(global-company-mode t)
 '(inhibit-startup-screen t)
 '(initial-scratch-message nil)
 '(menu-bar-mode nil)
 '(package-selected-packages
   '(company company-c-headers pdfgrep pdf-tools format-all which-key all))
 '(tab-bar-close-button nil t)
 '(tab-bar-mode t)
 '(tab-bar-new-button nil t)
 '(tool-bar-mode nil)
 '(which-key-idle-delay 0.0)
 '(which-key-mode t)
 '(display-line-numbers-mode t)

 )

(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(tab-bar ((t (:inherit nil :background "2e3436" :foreground "white"))))
 '(tab-bar-tab ((t (:inherit tab-bar :box (:line-width 1 :style released-button)))))
 '(tab-bar-tab-inactive ((t (:inherit tab-bar-tab :background "dim grey"))))
 '(tab-line ((t (:inherit variable-pitch :background "dim gray" :foreground "black" :height 0.9))))
 '(tool-bar ((t (:background "dim gray" :foreground "black" :box (:line-width 1 :style released-button))))))


;;move buffers
(require 'buffer-move "~/.emacs.d/external_stuff/buffer-move" )
(global-set-key (kbd "C-x <s-up>")     'buf-move-up)
(global-set-key (kbd "C-x <s-down>")   'buf-move-down)
(global-set-key (kbd "C-x <s-left>")   'buf-move-left)
(global-set-key (kbd "C-x <s-right>")  'buf-move-right)

;;move to window
(global-set-key (kbd "C-x <up>") 'windmove-up)
(global-set-key (kbd "C-x <down>") 'windmove-down)
(global-set-key (kbd "C-x <left>") 'windmove-left)
(global-set-key (kbd "C-x <right>") 'windmove-right)

;;move to tab
(global-set-key (kbd "C-x <M-right>") 'tab-next)
(global-set-key (kbd "C-x <M-left>") 'tab-previous)
